---
import type {Props} from '@astrojs/starlight/props';
import {ViewTransitions} from 'astro:transitions';
import StarlightHead from '@astrojs/starlight/components/Head.astro';

const {props}: {props: Props} = Astro;
---
<StarlightHead {...props}/>
<ViewTransitions fallback="swap"/>
<script>
  import '@/utils/croctClient';
  import { isTransitionBeforeSwapEvent, TRANSITION_BEFORE_SWAP } from 'astro:transitions/client';

  function persistElementForward(selector: string, oldDocument: Document, newDocument: Document) {
    console.log(`Persisting element ${selector} forward`);

    const oldElement = oldDocument.querySelector(selector);
    const newElement = newDocument.querySelector(selector);

    if (oldElement && newElement) {
      console.log(`Replacing element ${selector} with persisted element`);
      newElement.replaceWith(oldElement);
    }
  }

  document.addEventListener(TRANSITION_BEFORE_SWAP, event => {
    if (!isTransitionBeforeSwapEvent(event)) return;

    // Clear Pagefind search
    document.querySelector('site-search input')?.reset();

    persistElementForward('site-search', document, event.newDocument);
    persistElementForward('starlight-theme-select', document, event.newDocument);
  });
</script>
