---
import {Icons} from '@astrojs/starlight/components/Icons';
import {Icon} from '@astrojs/starlight/components';
import {routes, slugToPathname, type Route} from '@astrojs/starlight/routes';
import {z, parse} from '../utils/zod';

const schema = z.object({
  mode: z.enum(['updated', 'created']).default('created'),
  limit: z.number().default(4),
});

export type Props = z.infer<typeof schema>;

const props = parse(schema, Astro.props);

const iconCycle: Array<keyof typeof Icons> = [
  'star',
  'open-book',
  'document',
  'pencil',
  'approve-check',
  'approve-check-circle',
];

const dateProp = props.mode === 'created' ? 'firstPublished' : 'lastUpdated';

function comparator(a: Route, b: Route): number {
  const aDate = a[dateProp];
  const bDate = b[dateProp];

  return bDate.valueOf() - aDate.valueOf();
}

const routesInOrder = routes
  .filter(route => route.entry.data.template === 'doc')
  .filter(route => route[dateProp] !== undefined)
  .sort(comparator);

const latest = routesInOrder.slice(0, props.limit).map(
  (route, index) => ({
    title: route.entry.data.title,
    description: route.entry.data.description,
    icon: iconCycle[index % iconCycle.length],
    url: slugToPathname(route.slug),
    date: props.mode === 'created' ? route.firstPublished : route.lastUpdated,
  }),
);
---

{latest.map(
  entry => (
    <article class="card sl-flex">
      <p class="title sl-flex">
        <Icon name={entry.icon} class="icon" size="1.333em" />
        <a href={entry.url}>
          <span>{entry.title}</span>
        </a>
      </p>
      <div class="body">
        <p>
          {entry.description}
        </p>
      </div>
      <div class="sl-flex mt-0 date-info">
        <span class="date-info">
          Published At:
          <time datetime={entry.date.toISOString()}>
            {entry.date.toLocaleDateString('en', {dateStyle: 'medium', timeZone: 'UTC'})}
          </time>
        </span>
      </div>
    </article>
  ),
)}

<style>
    .card {
        --sl-card-border: var(--sl-color-purple);
        --sl-card-bg: var(--sl-color-purple-low);
        border: 1px solid var(--sl-color-gray-5);
        background-color: var(--sl-color-black);
        padding: clamp(1rem, calc(0.125rem + 3vw), 2.5rem);
        flex-direction: column;
        gap: clamp(0.5rem, calc(0.125rem + 1vw), 1rem);
    }
    .card:nth-child(4n + 1) {
        --sl-card-border: var(--sl-color-orange);
        --sl-card-bg: var(--sl-color-orange-low);
    }
    .card:nth-child(4n + 3) {
        --sl-card-border: var(--sl-color-green);
        --sl-card-bg: var(--sl-color-green-low);
    }
    .card:nth-child(4n + 4) {
        --sl-card-border: var(--sl-color-red);
        --sl-card-bg: var(--sl-color-red-low);
    }
    .card:nth-child(4n + 5) {
        --sl-card-border: var(--sl-color-blue);
        --sl-card-bg: var(--sl-color-blue-low);
    }
    .title {
        font-weight: 600;
        font-size: var(--sl-text-h4);
        color: var(--sl-color-white);
        line-height: var(--sl-line-height-headings);
        gap: 1rem;
        align-items: center;
    }
    .card .icon {
        border: 1px solid var(--sl-card-border);
        background-color: var(--sl-card-bg);
        padding: 0.2em;
        border-radius: 0.25rem;
    }
    .card .body {
        margin: 0;
        font-size: clamp(var(--sl-text-sm), calc(0.5rem + 1vw), var(--sl-text-body));
    }

    div.date-info {
        margin-top: 0 !important;
    }
    span.date-info {
        color: var(--sl-color-gray-4);
        margin-inline-start: auto;
    }
</style>
