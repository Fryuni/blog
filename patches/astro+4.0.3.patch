diff --git a/node_modules/astro/dist/core/routing/manifest/create.js b/node_modules/astro/dist/core/routing/manifest/create.js
index 2b149b1..2495a97 100644
--- a/node_modules/astro/dist/core/routing/manifest/create.js
+++ b/node_modules/astro/dist/core/routing/manifest/create.js
@@ -252,12 +252,12 @@ function createRouteManifest({ settings, cwd, fsMod }, logger) {
     const pagesDirRootRelative = pages.href.slice(settings.config.root.href.length);
     logger.warn(null, `Missing pages directory: ${pagesDirRootRelative}`);
   }
-  settings.injectedRoutes?.sort(
+  const injectedRoutes = settings.injectedRoutes?.sort(
     (a, b) => (
       // sort injected routes in the same way as user-defined routes
       comparator(injectedRouteToItem({ config, cwd }, a), injectedRouteToItem({ config, cwd }, b))
     )
-  ).reverse().forEach(({ pattern: name, entrypoint, prerender: prerenderInjected }) => {
+  ).map(({ pattern: name, entrypoint, prerender: prerenderInjected }) => {
     let resolved;
     try {
       resolved = require2.resolve(entrypoint, { paths: [cwd || fileURLToPath(config.root)] });
@@ -284,7 +284,7 @@ function createRouteManifest({ settings, cwd, fsMod }, logger) {
 This route collides with: "${collision.component}".`
       );
     }
-    routes.unshift({
+    return {
       type,
       route,
       pattern,
@@ -295,8 +295,9 @@ This route collides with: "${collision.component}".`
       pathname: pathname || void 0,
       prerender: prerenderInjected ?? prerender,
       fallbackRoutes: []
-    });
+    };
   });
+  routes.push(...injectedRoutes ?? []);
   Object.entries(settings.config.redirects).forEach(([from, to]) => {
     const trailingSlash = config.trailingSlash;
     const segments = removeLeadingForwardSlash(from).split(path.posix.sep).filter(Boolean).map((s) => {
